{"version":3,"sources":["webpack:///./js/input.js","webpack:///./js/fetchСountries.js"],"names":["defaultModules","set","PNotifyMobile","defaults","styling","icons","closerHover","refsInput","document","querySelector","refsSearchResults","addEventListener","debounce","event","innerHTML","searchQuery","countrySearchName","target","value","fetch","then","result","json","results","length","alert","text","type","delay","stack","Stack","dir1","insertAdjacentHTML","reduce","acc","item","name","createListCountriesTemplate","languageDisplay","languages","flag","capital","population","createCountryPropertiesTemplate","catch","console","log"],"mappings":"sOAGAA,iBAAeC,IAAIC,EAAe,IAMlCC,WAASC,QAAU,cACnBD,WAASE,MAAQ,cACjBF,WAASG,aAAc,EAEvB,IAAMC,EAAYC,SAASC,cAAc,iBACnCC,EAAoBF,SAASC,cAAc,mBA4DjDF,EAAUI,iBAAiB,QAASC,KA1DpC,SAA0BC,GACtBH,EAAkBI,UAAY,GAC9B,IClBmCC,EDkB7BC,EAAoBH,EAAMI,OAAOC,OClBJH,EDmBpBC,EClBVG,MAAM,yCAC8BJ,GACzCK,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WDiBjBF,MAAK,SAAAG,GACEA,EAAQC,OAAS,IACjBC,gBAAM,CACFC,KAAM,8DACNC,KAAM,QACNC,MAAO,IACPC,MAAO,IAAIC,QAAM,CACbC,KAAM,SAIdR,EAAQC,QAAU,GAAKD,EAAQC,QAAU,IACzCd,EAAkBsB,mBACd,YAepB,SAAqCT,GAQjC,MANF,4BACAA,EAAQU,QAAO,SAACC,EAAKC,GAEjB,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEF,IACH,QArBgBC,CAA4Bd,IAIb,IAAnBA,EAAQC,QACRd,EAAkBsB,mBACd,YAmBpB,SAAyCT,GACrC,IAAMe,EAAkBf,EAAQ,GAAGgB,UAAUN,QAAO,SAACC,EAAKC,GAEtD,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEJ,IAQH,MAPwB,4BAA4Bb,EAAQ,GAAGa,KAA1C,uEAEKb,EAAQ,GAAGiB,KAFhB,uHAI+BjB,EAAQ,GAAGkB,QAJ1C,kEAKkClB,EAAQ,GAAGmB,WAL7C,6DAM6BJ,EAN7B,oBAvBLK,CAAgCpB,OAI3CqB,MAAMC,QAAQC,OA6BwC,Q","file":"main.2fa03b0be06120429511.js","sourcesContent":["import debounce from 'lodash.debounce';\nimport { alert, defaultModules } from '@pnotify/core/dist/PNotify.js';\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\ndefaultModules.set(PNotifyMobile, {});\nimport fetchCountries from './fetchСountries.js';\nimport { defaults } from '@pnotify/core';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { Stack } from '@pnotify/core';\n\ndefaults.styling = 'brighttheme';\ndefaults.icons = 'brighttheme';\ndefaults.closerHover = true;\n\nconst refsInput = document.querySelector('.search-field');\nconst refsSearchResults = document.querySelector('.search-results');\n\nfunction displayCountries(event) {\n    refsSearchResults.innerHTML = '';\n    const countrySearchName = event.target.value;\n    fetchCountries(countrySearchName)\n        .then(results => {\n            if (results.length > 10) {\n                alert({\n                    text: 'Too many matches found. Please enter a more specific query!',\n                    type: 'error',\n                    delay: 1000,\n                    stack: new Stack({\n                        dir1: 'up',\n                    }),\n                });\n            }\n            if (results.length >= 2 && results.length <= 10) {\n                refsSearchResults.insertAdjacentHTML(\n                    'beforeend',\n                    createListCountriesTemplate(results),\n                );\n            };\n\n            if (results.length === 1) {\n                refsSearchResults.insertAdjacentHTML(\n                    'beforeend',\n                    createCountryPropertiesTemplate(results),\n                    );\n            };\n        })\n        .catch(console.log)\n};\n\nfunction createListCountriesTemplate(results) {\n  const template =\n  '<ul class=\"country-list\">' +\n  results.reduce((acc, item) => {\n      acc += `<li>${item.name}</li>`;\n      return acc;\n    }, '') +\n    '</ul>';\n    return template;\n}\n\nfunction createCountryPropertiesTemplate(results) {\n    const languageDisplay = results[0].languages.reduce((acc, item) => {\n        acc += `<li>${item.name}</li>`;\n        return acc;\n    }, '');\n    const templateCountry = `<h2 class='country-name'>${results[0].name}</h2>\n    <div class='country-card'>\n    <img width='500px' src=\"${results[0].flag}\" alt=\"flag\"></img>\n    <div class='country-properties'>\n    <p><span class='country-property'>Capital: </span>${results[0].capital}</p>\n    <p><span class='country-property'>Population: </span>${results[0].population}</p>\n    <h3 class='country-property'>Languages:</h3><ul>${languageDisplay}</ul></div></div>`;\n    return templateCountry;\n};\n\nrefsInput.addEventListener('input', debounce(displayCountries, 1000));\n","export default function fetchCountries(searchQuery) {\n  return fetch(\n    `https://restcountries.eu/rest/v2/name/${searchQuery}`,\n  ).then(result => result.json());\n};"],"sourceRoot":""}
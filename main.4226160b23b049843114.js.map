{"version":3,"sources":["webpack:///./js/input.js","webpack:///./js/fetchСountries.js"],"names":["defaultModules","set","PNotifyMobile","defaults","styling","icons","closerHover","refs","input","document","querySelector","searchResults","addEventListener","debounce","event","innerHTML","searchQuery","countrySearchTitle","target","value","fetch","then","result","json","lengh","alert","text","type","delay","stack","Stack","dir1","length","results","insertAdjacentHTML","reduce","acc","item","name","createListOfCountries","language","languages","data","capital","population","flag","createCountryCard","catch","console","log"],"mappings":"sOAGAA,iBAAeC,IAAIC,EAAe,IAMlCC,WAASC,QAAU,cACnBD,WAASE,MAAQ,cACjBF,WAASG,aAAc,EAEvB,IAAMC,EAAO,CACTC,MAAOC,SAASC,cAAc,gBAC9BC,cAAeF,SAASC,cAAc,oBAuD1CH,EAAKC,MAAMI,iBAAiB,QAASC,KApDjB,SAAAC,GAChBP,EAAKI,cAAcI,UAAY,GAC/B,ICpBmCC,EDoB7BC,EAAqBH,EAAMI,OAAOC,OCpBLH,EDqBpBC,ECpBVG,MAAM,yCAC8BJ,GACzCK,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WDkBaF,MAAK,SAAAC,GAChCA,EAAOE,OAAS,IAChBC,gBAAM,CACFC,KAAM,8DACNC,KAAM,QACNC,MAAO,IACPC,MAAO,IAAIC,QAAM,CACbC,KAAM,SAKdT,EAAOU,OAAS,IAAMC,QAAQD,QAAU,GACxCzB,EAAKI,cAAcuB,mBACf,YAYhB,SAA+BZ,GAK3B,MAJiB,4BAA8BA,EAAOa,QAAO,SAACC,EAAKC,GAE/D,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEJ,IAAM,QAhBgBC,CAAsBjB,IAItB,IAAjBA,EAAOE,OACPjB,EAAKI,cAAcuB,mBACf,YAchB,SAA2BZ,GACvB,IAAMkB,EAAWlB,EAAO,GAAGmB,UAAUN,QAAO,SAACC,EAAKC,GAE9C,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEJ,IAQH,MANoB,4BAA4BI,KAAK,GAAGJ,KAAvC,wIAEuCI,KAAK,GAAGC,QAF/C,sEAG0CD,KAAK,GAAGE,WAHlD,iEAIqCJ,EAJrC,kDAKcE,KAAK,GAAGG,KALtB,uCApBQC,CAAkBxB,OAGxCyB,MAAMC,QAAQC,OA0BsC,Q","file":"main.4226160b23b049843114.js","sourcesContent":["import debounce from 'lodash.debounce';\nimport { alert, defaultModules } from '@pnotify/core/dist/PNotify.js';\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\ndefaultModules.set(PNotifyMobile, {});\nimport fetchCountries from './fetchСountries.js';\nimport { defaults } from '@pnotify/core';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { Stack } from '@pnotify/core';\n\ndefaults.styling = 'brighttheme';\ndefaults.icons = 'brighttheme';\ndefaults.closerHover = true;\n\nconst refs = {\n    input: document.querySelector('.search-fild'),\n    searchResults: document.querySelector('.search-results')\n}\n\nconst handleInput = event => {\n    refs.searchResults.innerHTML = '';\n    const countrySearchTitle = event.target.value;\n    fetchCountries(countrySearchTitle).then(result => {\n        if (result.lengh >= 10) {\n            alert({\n                text: 'Too many matches found. Please enter a more specific query!',\n                type: 'error',\n                delay: 2000,\n                stack: new Stack({\n                    dir1: 'up',\n                }),\n            })\n        }\n\n        if (result.length < 10 && results.length >= 2) {\n            refs.searchResults.insertAdjacentHTML(\n                'beforeend', createListOfCountries(result)\n            );\n        };\n\n        if (result.lengh === 1) {\n            refs.searchResults.insertAdjacentHTML(\n                'beforeend', createCountryCard(result)\n            );\n        }\n    }).catch(console.log);\n}\n\nfunction createListOfCountries(result) {\n    const template = '<ul class=\"country-list\">' + result.reduce((acc, item) => {\n        acc += `<li>${item.name}</li>`;\n        return acc;\n    }, '') + '</ul>';\n    return template;\n};\n    \nfunction createCountryCard(result) {\n    const language = result[0].languages.reduce((acc, item) => {\n        acc += `<li>${item.name}</li>`;\n        return acc;\n    }, '');\n\n    const countryCard = `<h2 class='country-name'>${data[0].name}</h2>\n        <div class='country-card'><div class='country-properties'>\n        <p><span class='country-property'>Capital: </span>${data[0].capital}</p>\n        <p><span class='country-property'>Population: </span>${data[0].population}</p>\n        <h3 class='country-property'>Languages:</h3><ul>${language}</ul></div>\n        <img height='500px' src=\"${data[0].flag}\" alt=\"flag of coutnry\"></img></div>`;\n    return countryCard;\n};\n\nrefs.input.addEventListener('input', debounce(handleInput, 500));","export default function fetchCountries(searchQuery) {\n  return fetch(\n    `https://restcountries.eu/rest/v2/name/${searchQuery}`,\n  ).then(result => result.json());\n}"],"sourceRoot":""}